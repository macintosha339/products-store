{"version":3,"sources":["components/Header.js","store/types.js","components/FormAddBlock.js","store/actions/addSingleProductActions.js","pages/FormAddPage/index.js","store/actions/loaderActions.js","store/actions/fetchProductsActions.js","components/FetchedProducts.js","store/actions/getDateActions.js","store/actions/deleteProductActions.js","components/ProductsForm.js","components/ItemsButtonsContainer.js","store/actions/filterProductsActions.js","components/Products.js","pages/Main/index.js","components/Product.js","store/actions/fetchSingleProductActions.js","pages/ProductPage/index.js","components/EditFormBlock.js","store/actions/updateProductActions.js","pages/EditProductForm/index.js","App.js","reportWebVitals.js","store/reducers/appReducer.js","store/reducers/productsReducer.js","store/reducers/rootReducer.js","store/index.js","index.js"],"names":["Header","className","title","subTitle","FETCH_PRODUCTS","SHOW_LOADER","HIDE_LOADER","FETCH_SINGLE_PRODUCT","ADD_SINGLE_PRODUCT","ADD_PUBLISHED_PRODUCT","SHOW_PUBLISHED","SHOW_ALL","GET_DATE","UPDATE_PRODUCT","UPDATE_PUBLISHED_PRODUCT","DELETE_PRODUCT","DELETE_PUBLISHED_PRODUCT","FormAddBlock","navigate","useNavigate","dispatch","useDispatch","orientation","labelCol","span","wrapperCol","layout","onFinish","values","product","price","description","published","a","fetch","method","body","JSON","stringify","response","json","dateNow","Date","now","type","payload","id","date","addSingleProduct","validateMessages","required","types","number","Item","name","label","rules","min","TextArea","valuePropName","offset","htmlType","to","style","marginLeft","FormAddPage","showLoader","hideLoader","fetchProducts","limit","setTimeout","Meta","Card","cardsStyle","textAlign","FetchedProducts","url","useLocation","useEffect","products","useSelector","state","fetchedProducts","app","loading","size","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","item","width","extra","pathname","height","src","image","getDateAction","deleteProduct","console","log","ProductsForm","publishedProducts","isOnlyPublished","showPublished","dateOfCurrent","getDate","useState","isModalVisible","setIsModalVisible","searchText","setSearchText","searchedColumn","setSearchedColumn","handleOk","handleCancel","handleSearch","selectedKeys","confirm","dataIndex","searchInput","getColumnSearchProps","filterDropdown","setSelectedKeys","clearFilters","padding","ref","node","placeholder","value","onChange","e","target","onPressEnter","marginBottom","display","onClick","icon","SearchOutlined","handleReset","closeDropdown","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","columns","key","sorter","b","index","danger","onOk","onCancel","PlusCircleOutlined","pagination","pageSize","ItemsButtonsContainer","amount","setAmount","Group","Button","TabPane","Tabs","Products","defaultActiveKey","centered","tab","checkedChildren","unCheckedChildren","checked","Main","Product","productInfo","margin","marginTop","hoverable","cover","column","category","rating","rate","ProductPage","EditFormBlock","filter","updateProduct","defaultValue","defaultChecked","EditProductForm","App","exact","path","element","replace","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","map","persistedState","localStorage","getItem","parse","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","subscribe","setItem","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4efbe52.chunk.js","sourcesContent":["import React from 'react'\r\nimport { PageHeader } from 'antd'\r\nimport './Header.css'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <PageHeader\r\n            className=\"site-page-header\"\r\n            title=\"Products store\"\r\n            subTitle=\"Application for working with products\"\r\n        />\r\n    )\r\n}","export const FETCH_PRODUCTS = 'PRODUCT/FETCH_PRODUCTS'\r\nexport const SHOW_LOADER = 'APP/SHOW_LOADER'\r\nexport const HIDE_LOADER = 'APP/HIDE_LOADER'\r\nexport const FETCH_SINGLE_PRODUCT = 'PRODUCT/FETCH_SINGLE_PRODUCT'\r\nexport const ADD_SINGLE_PRODUCT = 'PRODUCT/ADD_SINGLE_PRODUCT'\r\nexport const ADD_PUBLISHED_PRODUCT = 'PRODUCT/ADD_PUBLISHED_PRODUCT'\r\nexport const SHOW_PUBLISHED = 'PRODUCT/SHOW_PUBLISHED'\r\nexport const SHOW_ALL = 'PRODUCT/SHOW_ALL'\r\nexport const GET_DATE = 'PRODUCT/GET_DATE'\r\nexport const UPDATE_PRODUCT = 'PRODUCT/UPDATE_PRODUCT'\r\nexport const UPDATE_PUBLISHED_PRODUCT = 'PRODUCT/UPDATE_PUBLISHED_PRODUCT'\r\nexport const DELETE_PRODUCT = 'PRODUCT/DELETE_PRODUCT'\r\nexport const DELETE_PUBLISHED_PRODUCT = 'PRODUCT/DELETE_PUBLISHED_PRODUCT'","import React from 'react'\r\nimport { Form, Input, Button, InputNumber, Switch, Divider } from 'antd'\r\nimport { useDispatch } from 'react-redux';\r\nimport { addSingleProduct } from '../store/actions/addSingleProductActions';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction FormAddBlock() {\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch();\r\n  const validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n      number: '${label} is not a valid number!',\r\n    }\r\n  };\r\n  const onFinish = (values) => {\r\n    const { title, price, description, published } = values.product\r\n    dispatch(addSingleProduct(title, price, description, published))\r\n    navigate('/products')\r\n  };\r\n  return (\r\n    <>\r\n      <Divider orientation='left'>Form for creating product</Divider>\r\n      <Form\r\n        labelCol={{\r\n          span: 4,\r\n        }}\r\n        wrapperCol={{\r\n          span: 14,\r\n        }}\r\n        layout=\"horizontal\"\r\n        onFinish={onFinish}\r\n        validateMessages={validateMessages}\r\n      >\r\n        <Form.Item\r\n          name={['product', 'title']}\r\n          label=\"Title\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n         name={['product', 'price']}\r\n         label=\"Price $\"\r\n         rules={[\r\n          {\r\n            required: true,\r\n            type: 'number',\r\n            min: 0\r\n          },\r\n        ]}\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n        <Form.Item\r\n         name={['product', 'description']}\r\n         label=\"Description\"\r\n         rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}\r\n        >\r\n          <Input.TextArea />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name={['product', 'published']} \r\n          label=\"Published\" \r\n          valuePropName=\"checked\"\r\n        >\r\n          <Switch />\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ span: 14, offset: 4 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <Link to={'/products'}>\r\n            <Button type='dashed' style={{marginLeft: '16px'}}>Back to products</Button>\r\n          </Link>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormAddBlock;","import { ADD_PUBLISHED_PRODUCT, ADD_SINGLE_PRODUCT } from \"../types\"\r\n\r\nexport const addSingleProduct = (title, price, description, published) => {\r\n    return async dispatch => {\r\n        const response = await fetch('https://fakestoreapi.com/products', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(\r\n                {\r\n                    title: title,\r\n                    price: price,\r\n                    description: description,\r\n                    published: published\r\n                }\r\n            )\r\n        })\r\n        const json = await response.json()\r\n        const dateNow = Date.now()\r\n        dispatch({ \r\n            type: ADD_SINGLE_PRODUCT, \r\n            payload: {\r\n                id: json.id,\r\n                title: title,\r\n                price: price,\r\n                description: description,\r\n                published: published ? \"+\" : '',\r\n                date: dateNow\r\n            } })\r\n        if(published) {\r\n            dispatch({\r\n                type: ADD_PUBLISHED_PRODUCT,\r\n                payload: {\r\n                    id: json.id,\r\n                    title: title,\r\n                    price: price,\r\n                    description: description,\r\n                    published: published ? \"+\" : '',\r\n                    date: dateNow\r\n                }\r\n            })\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport Header from '../../components/Header'\r\nimport FormAddBlock from '../../components/FormAddBlock';\r\nimport \"antd/dist/antd.css\";\r\n\r\nfunction FormAddPage() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <FormAddBlock />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormAddPage;","import { HIDE_LOADER, SHOW_LOADER } from \"../types\";\r\n\r\nexport function showLoader() {\r\n    return {\r\n        type: SHOW_LOADER\r\n    }\r\n}\r\n\r\nexport function hideLoader() {\r\n    return {\r\n        type: HIDE_LOADER\r\n    }\r\n}","import { FETCH_PRODUCTS } from \"../types\"\r\nimport { hideLoader, showLoader } from \"./loaderActions\"\r\n\r\nexport const fetchProducts = (limit) => {\r\n    return async dispatch => {\r\n        dispatch(showLoader())\r\n        const response = await fetch(`https://fakestoreapi.com/products${limit}`)\r\n        const json = await response.json()\r\n        setTimeout(() => {\r\n            dispatch({ type: FETCH_PRODUCTS, payload: json })\r\n            dispatch(hideLoader())\r\n        }, 500)\r\n    }\r\n}","import React from 'react'\r\nimport { List, Card, Spin, Image, Divider } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchProducts } from '../store/actions/fetchProductsActions';\r\nimport { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst cardsStyle = {\r\n    textAlign: \"center\"\r\n}\r\n\r\nexport default function FetchedProducts() {\r\n    let url = useLocation();\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(fetchProducts('?limit=8'))\r\n    }, []);\r\n    const products = useSelector(state => state.products.fetchedProducts)\r\n    const loading = useSelector(state => state.app.loading)\r\n\r\n    if(loading) {\r\n        return (\r\n            <Spin size='large' />\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Divider orientation='left'>List of fetched products</Divider>\r\n            <List\r\n                grid={{\r\n                    gutter: 32,\r\n                    xs: 1,\r\n                    sm: 2,\r\n                    md: 3,\r\n                    lg: 3,\r\n                    xl: 3,\r\n                    xxl: 3,\r\n                }}\r\n                dataSource={products}\r\n                renderItem={item => (\r\n                    <List.Item width={300}>\r\n                        <Card size='small' title={item.title} extra={<Link to={`${url.pathname}/${item.id}`}>More</Link>}>\r\n                            <div style={cardsStyle}>\r\n                                <Image\r\n                                    height={200}\r\n                                    src={item.image}\r\n                                />\r\n                            </div>\r\n                            <Meta \r\n                                title=\"Price\"\r\n                                style={cardsStyle}\r\n                            />\r\n                            <div style={cardsStyle}>\r\n                                {`${item.price} $`}\r\n                            </div>\r\n                        </Card>\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </>\r\n    );\r\n}","import { GET_DATE } from \"../types\"\r\n\r\nexport const getDateAction = (date) => {\r\n    return {\r\n        type: GET_DATE,\r\n        payload: date\r\n    }\r\n}","import { DELETE_PRODUCT, DELETE_PUBLISHED_PRODUCT } from \"../types\"\r\n\r\nexport const deleteProduct = (date) => {\r\n    return async dispatch => {\r\n        const response = await fetch('https://fakestoreapi.com/products/6', {\r\n            method: \"DELETE\"\r\n        })\r\n        dispatch({ \r\n            type: DELETE_PRODUCT,\r\n            payload: {\r\n                date: date\r\n            } \r\n        })\r\n        dispatch({\r\n            type: DELETE_PUBLISHED_PRODUCT,\r\n            payload: {\r\n                date: date\r\n            }\r\n        })\r\n        const json = await response.json()\r\n        console.log(json)\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Table, Divider, Space, Modal, Input } from 'antd'\r\nimport { PlusCircleOutlined } from '@ant-design/icons'\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getDateAction } from '../store/actions/getDateActions';\r\nimport { deleteProduct } from '../store/actions/deleteProductActions';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\nexport default function ProductsForm() {\r\n    const dispatch = useDispatch()\r\n    const products = useSelector(state => state.products.products)\r\n    const publishedProducts = useSelector(state => state.products.publishedProducts)\r\n    const isOnlyPublished = useSelector(state => state.products.showPublished)\r\n    const dateOfCurrent = useSelector(state => state.products.getDate)\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [searchText, setSearchText] = useState('')\r\n    const [searchedColumn, setSearchedColumn] = useState('');\r\n\r\n    const showModal = (date) => {\r\n      dispatch(getDateAction(date))\r\n      setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n      dispatch(deleteProduct(dateOfCurrent))\r\n      setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n      setIsModalVisible(false);\r\n    };\r\n\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n      confirm();\r\n      setSearchText(selectedKeys[0])\r\n      setSearchedColumn(dataIndex)\r\n    };\r\n  \r\n    const handleReset = clearFilters => {\r\n      clearFilters();\r\n      setSearchText('')\r\n    };\r\n\r\n    let searchInput = null\r\n\r\n    const getColumnSearchProps = dataIndex => ({\r\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n        <div style={{ padding: 8 }}>\r\n          <Input\r\n            ref={node => {\r\n              searchInput = node;\r\n            }}\r\n            placeholder={`Search ${dataIndex}`}\r\n            value={selectedKeys[0]}\r\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            style={{ marginBottom: 8, display: 'block' }}\r\n          />\r\n          <Space>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n              icon={<SearchOutlined />}\r\n              size=\"small\"\r\n              style={{ width: 90 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n            <Button\r\n              type=\"link\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                confirm({ closeDropdown: false });\r\n                setSearchText(selectedKeys[0])\r\n                setSearchedColumn(dataIndex)\r\n              }}\r\n            >\r\n              Filter\r\n            </Button>\r\n          </Space>\r\n        </div>\r\n      ),\r\n      filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n      onFilter: (value, record) =>\r\n        record[dataIndex]\r\n          ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n          : '',\r\n      onFilterDropdownVisibleChange: visible => {\r\n        if (visible) {\r\n          setTimeout(() => searchInput.select(), 100);\r\n        }\r\n      },\r\n      render: text =>\r\n        searchedColumn === dataIndex ? (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[searchText]}\r\n            autoEscape\r\n            textToHighlight={text ? text.toString() : ''}\r\n          />\r\n        ) : (\r\n          text\r\n        ),\r\n    });\r\n\r\n    const columns = [\r\n        {\r\n          title: 'Title',\r\n          dataIndex: 'title',\r\n          key: 'title',\r\n          ...getColumnSearchProps('title'),\r\n        },\r\n        {\r\n          title: 'Price $',\r\n          dataIndex: 'price',\r\n          key: 'price',\r\n          sorter: (a, b) => a.price - b.price,\r\n          ...getColumnSearchProps('price'),\r\n        },\r\n        {\r\n          title: 'Description',\r\n          dataIndex: 'description',\r\n          key: 'description',\r\n          ...getColumnSearchProps('description'),\r\n        },\r\n        {\r\n          title: 'Published',\r\n          dataIndex: 'published',\r\n          key: 'published',\r\n        },\r\n        {\r\n          title: 'Actions',\r\n          dataIndex: 'actions',\r\n          key: 'actions',\r\n          render: (text, record, index) => {\r\n            return (\r\n              <Space>\r\n                <Link onClick={() => {\r\n                  dispatch(getDateAction(record.date))\r\n                }} \r\n                to={'/editProduct'}>\r\n                    Edit\r\n                </Link>\r\n                <Button type='primary' onClick={() => {showModal(record.date)}} danger>Delete</Button>\r\n                <Modal title=\"Delete\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                  <p>Are you sure you want to remove the product?</p>\r\n                </Modal>\r\n              </Space>\r\n            )\r\n          }\r\n        },\r\n      ];\r\n    return (\r\n        <>\r\n            <Link to={'/formAdd'}>\r\n                <Button type='dashed' size='large' icon={<PlusCircleOutlined />}>\r\n                    Add product\r\n                </Button>\r\n            </Link>\r\n            <Divider orientation='left'>List of created products</Divider>\r\n            <Table \r\n              dataSource={isOnlyPublished ? publishedProducts : products} \r\n              columns={columns} \r\n              pagination={{\r\n                pageSize: 6\r\n              }}/>\r\n        </>\r\n    );\r\n}","import React from 'react'\r\nimport { Radio } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchProducts } from '../store/actions/fetchProductsActions';\r\n\r\nexport default function ItemsButtonsContainer () {\r\n    const [amount, setAmount] = useState('8 items');\r\n    const dispatch = useDispatch();\r\n\r\n    const handleAmountChange = e => {\r\n        setAmount(e.target.value)\r\n        if(e.target.value === '8 items') {\r\n            dispatch(fetchProducts('?limit=8'))\r\n        } else if(e.target.value === '16 items') {\r\n            dispatch(fetchProducts('?limit=16'))\r\n        } else if(e.target.value === 'all') {\r\n            dispatch(fetchProducts(''))\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <Radio.Group value={amount} onChange={handleAmountChange}>\r\n            <Radio.Button value=\"8 items\">8 items</Radio.Button>\r\n            <Radio.Button value=\"16 items\">16 items</Radio.Button>\r\n            <Radio.Button value=\"all\">All items</Radio.Button>\r\n        </Radio.Group>\r\n        </>\r\n    )\r\n}","import { SHOW_PUBLISHED, SHOW_ALL } from \"../types\"\r\n\r\nexport const showPublished = () => {\r\n    return {\r\n        type: SHOW_PUBLISHED\r\n    }\r\n}\r\n\r\nexport const showAllProducts = () => {\r\n    return {\r\n        type: SHOW_ALL\r\n    }\r\n}","import React from 'react'\r\nimport { Tabs, Switch } from 'antd'\r\nimport FetchedProducts from './FetchedProducts'\r\nimport ProductsForm from './ProductsForm'\r\nimport ItemsButtonsContainer from './ItemsButtonsContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { showPublished, showAllProducts } from '../store/actions/filterProductsActions'\r\n\r\nconst { TabPane } = Tabs\r\n\r\nexport default function Products() {\r\n    const dispatch = useDispatch();\r\n    const isOnlyPublished = useSelector(state => state.products.showPublished)\r\n    return (\r\n        <Tabs defaultActiveKey=\"1\" centered>\r\n            <TabPane tab=\"Fetched products\" key=\"1\">\r\n                <ItemsButtonsContainer />\r\n                <FetchedProducts />\r\n            </TabPane>\r\n            <TabPane \r\n                tab={\r\n                    <>\r\n                        Form products\r\n                        <Switch \r\n                            checkedChildren=\"show all products\" \r\n                            unCheckedChildren=\"show only published\"\r\n                            checked={isOnlyPublished ? true : false}\r\n                            style={{marginLeft: '16px'}} \r\n                            onClick={(checked) => {checked ? dispatch(showPublished()) : dispatch(showAllProducts())}}\r\n                        />\r\n                    </>\r\n                } \r\n                key=\"2\"\r\n            >\r\n                <ProductsForm />\r\n            </TabPane>\r\n        </Tabs>\r\n    )\r\n}","import React from 'react'\r\nimport Header from '../../components/Header'\r\nimport Products from '../../components/Products'\r\nimport \"antd/dist/antd.css\";\r\n\r\nfunction Main() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Products />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchSingleProduct } from '../store/actions/fetchSingleProductActions';\r\nimport { Spin, Image, Card, Descriptions, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst { Meta } = Card\r\n\r\nexport default function Product() {\r\n    let url = useLocation();\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n      dispatch(fetchSingleProduct(url.pathname))  \r\n    }, [])\r\n    const product = useSelector(state => state.products.productInfo)\r\n    const loading = useSelector(state => state.app.loading)\r\n    let cardStyle = {\r\n        margin: '0 auto',\r\n        marginTop: '16px',\r\n        width: '600px',\r\n        textAlign: \"center\"\r\n    }\r\n    if(loading) {\r\n        return <Spin size='large' />\r\n    }\r\n    return (\r\n        <div style={cardStyle}>\r\n            <Link to={'/products'}>\r\n                <Button type='dashed' style={{marginBottom: '16px'}}>Back to products</Button>\r\n            </Link>\r\n            <Card\r\n                hoverable\r\n                style={{ width: 600 }}\r\n                cover={<Image src={product.image} width={250} />}\r\n            >\r\n                <Descriptions title=\"Product Info\" column={1}>\r\n                    <Descriptions.Item label=\"Title\">{product.title}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Category\">{product.category}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Price\">{product.price} $</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Rating\">{product.rating?.rate} stars</Descriptions.Item>\r\n                </Descriptions>\r\n                <Meta style={{textAlign: 'left'}} description={product.description} />\r\n            </Card>\r\n        </div>\r\n    )\r\n}","import { FETCH_SINGLE_PRODUCT } from \"../types\";\r\nimport { hideLoader, showLoader } from \"./loaderActions\";\r\n\r\nexport const fetchSingleProduct = (pathname) => {\r\n    return async dispatch => {\r\n        dispatch(showLoader())\r\n        const response = await fetch(`https://fakestoreapi.com${pathname}`)\r\n        const json = await response.json()\r\n        setTimeout(() => {\r\n            dispatch({ type: FETCH_SINGLE_PRODUCT, payload: json })\r\n            dispatch(hideLoader())\r\n        }, 500)\r\n    }\r\n}","import React from 'react'\r\nimport Header from '../../components/Header'\r\nimport \"antd/dist/antd.css\";\r\nimport Product from '../../components/Product';\r\n\r\nfunction ProductPage() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Product />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductPage;","import React, { useState } from 'react'\r\nimport { Form, Input, Button, InputNumber, Switch, Modal } from 'antd'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateProduct } from '../store/actions/updateProductActions';\r\nimport { deleteProduct } from '../store/actions/deleteProductActions';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction EditFormBlock() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const dateOfCurrent = useSelector(state => state.products.getDate)\r\n  const product = useSelector(state => state.products.products.filter((product) => dateOfCurrent === product.date))\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    dispatch(deleteProduct(dateOfCurrent))\r\n    setIsModalVisible(false);\r\n    navigate('/products')\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n      number: '${label} is not a valid number!',\r\n    }\r\n  };\r\n  const onFinish = (values) => {\r\n    const { title, price, description, published } = values.product\r\n    dispatch(updateProduct(title, price, description, published))\r\n    navigate('/products')\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        labelCol={{\r\n          span: 4,\r\n        }}\r\n        wrapperCol={{\r\n          span: 14,\r\n        }}\r\n        layout=\"horizontal\"\r\n        onFinish={onFinish}\r\n        validateMessages={validateMessages}\r\n      >\r\n        <Form.Item\r\n          name={['product', 'title']}\r\n          label=\"Title\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input defaultValue={product[0]?.title}/>\r\n        </Form.Item>\r\n        <Form.Item\r\n         name={['product', 'price']}\r\n         label=\"Price $\"\r\n         rules={[\r\n          {\r\n            required: true,\r\n            type: 'number',\r\n            min: 0\r\n          },\r\n        ]}\r\n        >\r\n          <InputNumber defaultValue={product[0]?.price}/>\r\n        </Form.Item>\r\n        <Form.Item\r\n         name={['product', 'description']}\r\n         label=\"Description\"\r\n         rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}\r\n        >\r\n          <Input.TextArea defaultValue={product[0]?.description}/>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name={['product', 'published']} \r\n          label=\"Published\" \r\n          valuePropName=\"checked\"\r\n        >\r\n          <Switch defaultChecked={product[0]?.published}/>\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ span: 14, offset: 4 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <Button type='primary' onClick={showModal} style={{marginLeft: '16px'}} danger>Delete product</Button>\r\n          <Modal title=\"Delete\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n            <p>Are you sure you want to remove the product?</p>\r\n          </Modal>\r\n          <Link to={'/products'}>\r\n            <Button type='dashed' style={{marginLeft: '16px'}}>Back to products</Button>\r\n          </Link>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditFormBlock;","import { UPDATE_PUBLISHED_PRODUCT, UPDATE_PRODUCT } from \"../types\"\r\n\r\nexport const updateProduct = (title, price, description, published) => {\r\n    return async dispatch => {\r\n        const response = await fetch('https://fakestoreapi.com/products', {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(\r\n                {\r\n                    title: title,\r\n                    price: price,\r\n                    description: description,\r\n                    published: published\r\n                }\r\n            )\r\n        })\r\n        dispatch({ \r\n            type: UPDATE_PRODUCT, \r\n            payload: {\r\n                title: title,\r\n                price: price,\r\n                description: description,\r\n                published: published ? \"+\" : '',\r\n                date: Date.now()\r\n            } })\r\n        dispatch({\r\n            type: UPDATE_PUBLISHED_PRODUCT,\r\n            payload: {\r\n                title: title,\r\n                price: price,\r\n                description: description,\r\n                published: published ? \"+\" : '',\r\n                date: Date.now()\r\n                }\r\n            })\r\n        const json = await response.json()\r\n        console.log(json)\r\n    }\r\n}","import React from 'react'\r\nimport Header from '../../components/Header'\r\nimport \"antd/dist/antd.css\";\r\nimport { Divider } from 'antd'\r\nimport EditFormBlock from '../../components/EditFormBlock';\r\n\r\nfunction EditProductForm() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Divider orientation='left'>Product edit form</Divider>\r\n      <EditFormBlock />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditProductForm;","import React from \"react\";\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport FormAddPage from \"./pages/FormAddPage\";\r\nimport Main from './pages/Main'\r\nimport ProductPage from \"./pages/ProductPage\";\r\nimport EditProductForm from \"./pages/EditProductForm\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Routes>\r\n      <Route exact path={\"/products\"} element={<Main/>}/>\r\n      <Route\r\n        path=\"/products/:id\"\r\n        element={<ProductPage />}\r\n      />\r\n      <Route path={\"/formAdd\"} element={<FormAddPage />} />\r\n      <Route path=\"/\" element={<Navigate replace to=\"/products\" />} />\r\n      <Route path=\"/editProduct\" element={<EditProductForm />}/>\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { HIDE_LOADER, SHOW_LOADER } from \"../types\"\r\n\r\nconst initialState = {\r\n    loading: false\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SHOW_LOADER:\r\n            return {...state, loading: true}\r\n        case HIDE_LOADER:\r\n            return {...state, loading: false}\r\n        default: return state\r\n    }\r\n}","import { \r\n    FETCH_PRODUCTS, \r\n    FETCH_SINGLE_PRODUCT, \r\n    ADD_SINGLE_PRODUCT, \r\n    ADD_PUBLISHED_PRODUCT, \r\n    SHOW_PUBLISHED, \r\n    SHOW_ALL, \r\n    GET_DATE, \r\n    UPDATE_PRODUCT, \r\n    UPDATE_PUBLISHED_PRODUCT, \r\n    DELETE_PRODUCT, \r\n    DELETE_PUBLISHED_PRODUCT \r\n} from \"../types\"\r\n\r\nconst initialState = {\r\n    products: [],\r\n    fetchedProducts: [],\r\n    productInfo: [],\r\n    publishedProducts: [],\r\n    showPublished: false,\r\n    getDate: null\r\n}\r\n\r\nexport const productsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FETCH_PRODUCTS:\r\n            return {...state, fetchedProducts: action.payload}\r\n        case FETCH_SINGLE_PRODUCT:\r\n            return {...state, productInfo: action.payload}\r\n        case ADD_SINGLE_PRODUCT:\r\n            return {...state, products: [...state.products, action.payload]}\r\n        case ADD_PUBLISHED_PRODUCT:\r\n            return {...state, publishedProducts: [...state.publishedProducts, action.payload]}\r\n        case SHOW_PUBLISHED:\r\n            return {...state, showPublished: true}\r\n        case SHOW_ALL:\r\n            return {...state, showPublished: false}\r\n        case GET_DATE:\r\n            return {...state, getDate: action.payload}\r\n        case UPDATE_PRODUCT:\r\n            return {...state, products: state.products.map((product) => {\r\n                if(product.date === state.getDate) {\r\n                    return action.payload\r\n                }\r\n                return product\r\n            })}\r\n        case UPDATE_PUBLISHED_PRODUCT:\r\n            return {...state, publishedProducts: state.products.filter((product) => product.published === \"+\")}\r\n        case DELETE_PRODUCT:\r\n            return {...state, products: state.products.filter((product) => state.getDate !== product.date)}\r\n        case DELETE_PUBLISHED_PRODUCT:\r\n            return {...state, publishedProducts: state.publishedProducts.filter((product) => state.getDate !== product.date)}\r\n        default: return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { appReducer } from \"./appReducer\";\r\nimport { productsReducer } from \"./productsReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    products: productsReducer,\r\n    app: appReducer\r\n})","import { compose, createStore, applyMiddleware } from 'redux';\r\nimport { rootReducer } from './reducers/rootReducer'\r\nimport thunk from 'redux-thunk';\r\n\r\nconst persistedState = localStorage.getItem('redux-store')\r\n? JSON.parse(localStorage.getItem('redux-store'))\r\n: {}\r\nexport const store = createStore(rootReducer, persistedState, compose(\r\n    applyMiddleware(\r\n        thunk\r\n    ),\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()\r\n  ));\r\n\r\nstore.subscribe(() => {\r\n    localStorage.setItem('redux-store', JSON.stringify(store.getState()))\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store ={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}